input = ['dghfbsyiznoumojleevappwqtr', 
'dghfbsyiznoumkjljevacpmqer', 
'dghfbbyizioumkjlxevacpwdtr', 
'dghfbsesznoumkjlxevacpwqkr', 
'dghfbsynznoumkjlxziacpwqtr', 
'cghfbsyiznjumkjlxevacprqtr', 
'dghfjsyizwoumkjlxevactwqtr', 
'dghfdsyfinoumkjlxevacpwqtr', 
'hghfbsyiznoumkjlxivacpwqtj', 
'dgcfbsyiznoumkjlxevacbuqtr', 
'dghfbsyiznoymnjlxevacpwvtr', 
'dfhfbsyiznoumkulxevacptqtr', 
'dghfasyiznovmkjlxevacpwqnr', 
'dghfbsyihnouikjlxevackwqtr', 
'dghfbayiznolmkjlyevacpwqtr', 
'jghfbsyiznoumnjldevacpwqtr', 
'dhhfbsyuznoumkjlxevakpwqtr', 
'nehfrsyiznoumkjlxevacpwqtr', 
'dghfbsyiznxdmkolxevacpwqtr', 
'dgpfbsyizwlumkjlxevacpwqtr', 
'yghfbsyiznoumkjlsevacpwqtm', 
'dghfssyiznoumkjlxevvcpwqjr', 
'dahfbsyiznoumkjlfevacpwqto', 
'duhfcsyiznouvkjlxevacpwqtr', 
'dghfbvyiznoumkjlrevacpwvtr', 
'dghfgsyiznoumknlxgvacpwqtr', 
'jghfbeyiznkumkjlxevacpwqtr', 
'daofbsyiznoumkjlxevampwqtr', 
'dghfbsyiznojmkjlxeracpcqtr', 
'dghnbsyiznouokjlxevaclwqtr', 
'dgifbsyiznoumkjlxevnspwqtr', 
'dgkfpsziznoumkjlxevacpwqtr', 
'dghfxsyijnoumkjlxevaccwqtr', 
'dghfbsyiznolmkjlwevzcpwqtr', 
'dkhfbsaiznoumkjlxevacpwqtg', 
'dghfbsygknoumkjlaevacpwqtr', 
'dghfbsyizizumkjlxevacpxqtr', 
'ighfbbyijnoumxjlxevacpwqtr', 
'dghfbsyizrouekjlxevacpwktr', 
'dghobsyiznoujkjlxevacnwqtr', 
'dghpbsyizyoumkjlxeaacpwqtr', 
'dghffsyiznoymkjlxevacewqtr', 
'dghkbssiznoumzjlxevacpwqtr', 
'dghfbsyawnoumkjlxevacpwjtr', 
'drhfbsyiznormkjlfevacpwqtr', 
'dghfbsoiznouwkjlxevacpwqtn', 
'dghfmsyiznoumkjlxlvecpwqtr', 
'dxhfbsyiznoumkjlxeeacvwqtr', 
'dghnbsyiznoumkjsxevacpwqur', 
'dghfbsyiznrujkjlxevacpwqtc', 
'dghfbstoznoumhjlxevacpwqtr', 
'dghfboyiznzumkjlvevacpwqtr', 
'dghfbsyiznjumkjlxevgcpwmtr', 
'dghfbsnizaoumkjlxevacpwetr', 
'dghfbsyirnoumkjoxevacplqtr', 
'dghfbsyiznoumkjlxavvckwqtr', 
'dghfbjdiznoumkjlxevacpwptr', 
'dghfbsywznoumkjlxeiacpwqcr', 
'djhfbsyizuoumkjlxelacpwqtr', 
'dghffsniznoumkjlxpvacpwqtr', 
'dghebsyizuoumkjlxevecpwqtr', 
'rghfbsyiznourkjcxevacpwqtr', 
'dghfbsyignoumkwlxenacpwqtr', 
'dghfbsyiznrufkjlxevacpwqth', 
'dgifbsyiznoumkjlxevacpjqnr', 
'dghfbsyiznoumkjbxevaxpwqtw', 
'dsufbsyizncumkjlxevacpwqtr', 
'dihfbsyiznoumujlxecacpwqtr', 
'dghfbiyiznoumkjlxevajpwqtn', 
'dghqbsyixnoumkjlrevacpwqtr', 
'dghfbsyiznouukjlxeuacpwqtx', 
'dghfbsyizyoumksfxevacpwqtr', 
'dghfbsiiznopfkjlxevacpwqtr', 
'eghfbsyidnoumkjlxexacpwqtr', 
'dghfbgyiznouwkjlwevacpwqtr', 
'dghfbsyyznoumkjlxevacwwqtf', 
'bghfbtypznoumkjlxevacpwqtr', 
'dghfbsyiznoumtjlxebacpwetr', 
'dghfbsgiznonmkplxevacpwqtr', 
'dghfbsyiznoumxjlxevanpwqpr', 
'dghfbsyiznwumujuxevacpwqtr', 
'dghxbsyiznoumkjzxevaypwqtr', 
'dghfbsyhznoumkjlxlvacpiqtr', 
'dghfbsyiznoumkjlxevzcnwqrr', 
'dvhfbsyiznoumkjluevacpzqtr', 
'dghcbsyiznoumkjlxmvacpwetr', 
'dghfbsyiznohmkjvxbvacpwqtr', 
'dghfzsyiznouokjlxevacpwqpr', 
'dghfbsyiznoumkjlxevachtqth', 
'dghfbsyiznoumkjlxjvacpfutr', 
'dghfbsyiznoumkjlxevsppwqtt', 
'dghfusyiznouakhlxevacpwqtr', 
'dghfbsyizcoumkjlxrvaipwqtr', 
'dghebsyipnoumfjlxevacpwqtr', 
'dgdfbsyiznoumkjlwevacpkqtr', 
'dghfbsyiznoumkjlcffacpwqtr', 
'dghfbsypznfumkjlxevacpwqar', 
'dghfbsyiznojmkjlxevgcpkqtr', 
'dghfbsyiznoumkjlaevlcpwstr', 
'dgafrsyiunoumkjlxevacpwqtr', 
'dghfbsyiznouqljlxevacrwqtr', 
'dyhkbsyiznokmkjlxevacpwqtr', 
'pghfbsciznoumkjlxevacpwvtr', 
'dghfbxyiznonmkjllevacpwqtr', 
'ighfbsyizxoumkjlxevacpzqtr', 
'dgffbsyoznoumkjlxevacpwqto', 
'hghfbsyiznoumkjlpevachwqtr', 
'dlhfosyiznoumkjldevacpwqtr', 
'dghfbsvizkoumkjlxvvacpwqtr', 
'dbafbsyiznozmkjlxevacpwqtr', 
'dghfbsyidnoumkjlxrvjcpwqtr', 
'dghfbsyiznfumkjlxeqacpwqta', 
'dghfbsfiznoumkjvxevacjwqtr', 
'dghfbsyimnoumrjlhevacpwqtr', 
'dghflsyiznoumkjlxevacpvqmr', 
'dghfbmfiznoumkjlxevacpdqtr', 
'dghfbsyizsouzkjlxevscpwqtr', 
'dghfksyiznoumimlxevacpwqtr', 
'dghfbsyiznoumkjlxevbwpwqur', 
'wghcbsyiznoumkjlkevacpwqtr', 
'kghfbioiznoumkjlxevacpwqtr', 
'dghfbsiizeoumkjlxmvacpwqtr', 
'dglfbsyilnoumkjlxevpcpwqtr', 
'dgqfbsylznoumkjlxevacpwqcr', 
'dglfhsyiznoumkjlxevacpwqdr', 
'dghfbsymznoumkjlxbvacpwqtb', 
'hghfbsyizhoumkjlxtvacpwqtr', 
'dghdbsyiznoumkjlxeiacpyqtr', 
'dohfbsyiznoumkjmxlvacpwqtr', 
'xhhfbsyiznoumkjlxegacpwqtr', 
'dlhfbsyiznoumkjlxnvahpwqtr', 
'dghfbsyiznovdpjlxevacpwqtr', 
'dgcfbsyiznoumkjlxevactwqdr', 
'dghfksyiknoumkjlxevacpwqcr', 
'ughfqsyiznoumkjlxevacpwctr', 
'dghfbjyiznoumkjlxsvacnwqtr', 
'dgwfbagiznoumkjlxevacpwqtr', 
'dghfbsyiznoumknlxevtcpwqdr', 
'jghfksyiznoumkjlxeoacpwqtr', 
'dghfbsyiznoimkjlwezacpwqtr', 
'dghfbsyiunoumkjlxeqacpwstr', 
'dghfbsyizjoumkwlxevaypwqtr', 
'dghfysriznoumkjlxevucpwqtr', 
'dghfbsygzjoumkjfxevacpwqtr', 
'dghfbhviznoumkjlxevacpwqtq', 
'dghfbsyiznoumkjvwevacpwqur', 
'dghfbsyiznoumtjlxevacplqnr', 
'yghfbsysznouykjlxevacpwqtr', 
'dgwfbsiiznoumkjlxevacfwqtr', 
'dghfbsyizooumkjlxevampiqtr', 
'dshfbsyiznoumkjlxevawpoqtr', 
'dghtbsyxznuumkjlxevacpwqtr', 
'dkhfblyiznoumkjlxevacpaqtr', 
'dgkfbsyiinoumkjlxegacpwqtr', 
'dghfbtxiznouhkjlxevacpwqtr', 
'dghfbsyiznoumkjlxkvmcpeqtr', 
'dghfbsyiznoumkjlghvacpwqmr', 
'dghfbsbizioumkjlcevacpwqtr', 
'dphfbsyizhoumkjwxevacpwqtr', 
'dghfbsyiznqumkjlugvacpwqtr', 
'dghfbsjinnoumkjlxevacpwetr', 
'mghfbsyiznoumkjlxfvacpjqtr', 
'dghfbsxiznoumkjlxetacwwqtr', 
'dghmbsyiznoumbjlxevacpwqyr', 
'dghfbsyiznwumkjlwevacmwqtr', 
'dgkfbsyiznotmkjlxevacpwstr', 
'dghfbsyiznouykjlxeiacuwqtr', 
'dghfbsynznbhmkjlxevacpwqtr', 
'dgyfbsyiznoumtjlbevacpwqtr', 
'dghfbftiznoumkjlxevacpwatr', 
'dghfvsyiznouikjlievacpwqtr', 
'dghfbsyiznodmkjlxevncpwqtz', 
'yfhfbsyiznoumkjluevacpwqtr', 
'dghfbzyiznoumhflxevacpwqtr', 
'dphfbsyizncumkjlxevacpwqtf', 
'dghfasyiznoumkjlxeaicpwqtr', 
'dgffbsyiznoumkjlzevacpwqsr', 
'dghfbsyiznoumkmxxcvacpwqtr', 
'dghffsyiznoumkjlxevacpwqre', 
'dghfbsyizndmmkjlxemacpwqtr', 
'dghfbsviznoamkjlxevappwqtr', 
'dghfbsyiznouckrlxevacpdqtr', 
'dgwfbsyiznyumkjlxevacpqqtr', 
'dujfbsyiznoumgjlxevacpwqtr', 
'dghobsailnoumkjlxevacpwqtr', 
'dghfkqyiznoumknlxevacpwqtr', 
'dghfbyypznoumkjlxevacpwatr', 
'wqhfbsyiznoumkjlxevzcpwqtr', 
'dghfbsyiznoumwjlxrvacppqtr', 
'dghfbsymznoumkflxevacplqtr', 
'dghfbsyiznounkjpgevacpwqtr', 
'ighfbsyijnoumxjlxevacpwqtr', 
'dghfbsyizroumkjllevncpwqtr', 
'dghfbsliznokmkjlxevacpwqtb', 
'dgefbsyiznoumkqlxevpcpwqtr', 
'dghfbtypznouzkjlxevacpwqtr', 
'dmhfbsyiznoumkjlxeyactwqtr', 
'vohfbsyiznoumkjlqevacpwqtr', 
'dgsfpsyiznodmkjlxevacpwqtr', 
'dghfzsyijnoumkjnxevacpwqtr', 
'dghfbayijroumkjlxevacpwqtr', 
'dghfbsyiznodmxjlxgvacpwqtr', 
'dghfbsyiznocmkjlxhvaipwqtr', 
'dghmbsyignoumkjlxevacpoqtr', 
'dghfbsyiznosmkjlncvacpwqtr', 
'dggfbsyiznuumkjlxevacpwqrr', 
'dghibsyilnoumkjlxevacowqtr', 
'dghfbsyiznoumkjluevbcowqtr', 
'dghfbsaiznyuvkjlxevacpwqtr', 
'dgnfxsyiznommkjlxevacpwqtr', 
'dghfbnyiznoumkjlsnvacpwqtr', 
'dghfssiiznoumkjlxavacpwqtr', 
'dghfbsyizneumajlxevacfwqtr', 
'dghfbsyiznoumkjlxevycpvptr', 
'qghfbsyizgoumkjlxevacpwttr', 
'vghfbsyiznoumkjlievaepwqtr', 
'dghfbsyiznoumejlxjvacpwdtr', 
'dghfbsyispoumkjlxevacpwqtg', 
'duhfbsyizpoumkjlxenacpwqtr', 
'dghfbsyifnoumkblxevacpnqtr', 
'bghfbsyxznoumkjleevacpwqtr', 
'dgtfbsyzpnoumkjlxevacpwqtr', 
'dghfbsyiznoumkjlsecacpwqth', 
'dghfqsyiznjumkjlxevawpwqtr', 
'dgcfbsyizboumkjlxevacqwqtr', 
'dghfbqyiznoumkjkxevacpwqtj', 
'dgyfbsyfznoumkjlievacpwqtr', 
'dghfdsyiznoumkplxevacpwdtr', 
'dphfbsyuznkumkjlxevacpwqtr', 
'dghfbsyiznoupkjitevacpwqtr', 
'dghfisyiznoamkjlxevacpwqwr', 
'dgufbsyiznoumkjlxivvcpwqtr', 
'dghfbvyiznoumkjlxevacvwqtz', 
'dghfbsyiqnxumkjlxbvacpwqtr', 
'dghubsyiznqumkflxevacpwqtr', 
'dghfbsyiznzumkjlxevacpdbtr', 
'dghfbsyiznoumkjlxehacpwwrr', 
'mghfbsyiznoumkjlxevacpwqbp', 
'dvhfbryiznoumkclxevacpwqtr', 
'dghbbsyiznotmkjlxevacpwqhr', 
'dghfrsyiznoomkjlxevacpwqto', 
'dghfbkyiznoumkjlxeracpxqtr', 
'dghfbfyizfoumkjlxevacpwjtr', 
'dghfbsyizqoulkjlxevacpwqtt', 
'dghfbsyiwnoumkjlxevacxwgtr', 
'dghfbsyiznormkjlgxvacpwqtr', 
'dghybsyizioumkjoxevacpwqtr', 
'dchfbsyiznoumkjlxyvacpwqtc', 
'dgyfbsyiznouckjlxewacpwqtr', 
'dakfbsyeznoumkjlxevacpwqtr']

def main():
    twos = 0
    threes = 0

    for i in input:
        d = dict()
        for letter in i:
            d[letter] = d.get(letter, 0) + 1
        was_two = False
        was_three = False
        for v in d.values():
            if not was_two and v == 2:
                twos += 1
                was_two = True
            elif not was_three and v == 3:
                threes += 1
                was_three = True

    print(twos, threes, twos * threes)

    output = []

    n = len(input[0])
    for i in range(len(input)):
        for j_ in range(len(input) - i - 1):
            j = j_ + i + 1
            wrong = 0
            for k in range(n):
                if input[i][k] != input[j][k]:
                    wrong += 1
                    if wrong > 1:
                        break
            if wrong == 1:
                print(input[i], input[j])
                return
main()
# ighfb b yijnoumxjlxevacpwqtr 
# ighfb s yijnoumxjlxevacpwqtr 
# ighfbyijnoumxjlxevacpwqtr